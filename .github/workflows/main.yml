name: GameCI Template 🎮

on: workflow_dispatch

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

jobs:
  testRunner:
    name: Test in ${{ matrix.testMode }} ✨
    permissions: write-all
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        testMode:
          - EditMode
          - PlayMode
    steps:
      - name: Checkout code
        uses: actions/checkout@v3.5.2

      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      - name: Restore Library cache
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-test-project-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-test-project-
            Library-

      - name: Run tests
        uses: game-ci/unity-test-runner@v2
        id: testRunner
        with:
          testMode: ${{ matrix.testMode }}
          checkName: ${{ matrix.testMode }} test results
          githubToken: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/upload-artifact@v2
        with:
          name: Test results (${{ matrix.testMode }})
          path: ${{ steps.testRunner.outputs.artifactsPath }}

  buildWebGL:
    needs: testRunner
    name: Build for WebGL 🖥️
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v3.5.2
      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      - name: Restore Library cache
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-build-WebGL
          restore-keys: |
            Library-build-
            Library-

      - uses: game-ci/unity-builder@v2
        with:
          targetPlatform: WebGL

      - uses: actions/upload-artifact@v2
        with:
          name: build-WebGL
          path: build/WebGL

  buildWindows:
#     needs: testRunner
    name: Build for Windows 🖥️
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      - name: Restore Library cache
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-build-StandaloneWindows64
          restore-keys: |
            Library-build-
            Library-

      - uses: game-ci/unity-builder@v2
        with:
          targetPlatform: StandaloneWindows64

      - uses: actions/upload-artifact@v2
        with:
          name: build-StandaloneWindows64
          path: build/StandaloneWindows64

  buildAndroid:
#     needs: testRunner
    name: Build for Android 📱
    runs-on: ubuntu-latest
    permissions:
         contents: write
    strategy:
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v3.5.2

      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      - name: Restore Library cache
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-build-Android
          restore-keys: |
            Library-build-
            Library-

      - uses: game-ci/unity-builder@v2.2.0
        with:
          androidExportType: androidStudioProject
          buildsPath: androidBuild
          targetPlatform: Android
          
      - name: Log directory
        run: |  
            cd ./androidBuild/Android
            ls -la
            
      - uses: actions/upload-artifact@v2
        with:
           name: build-Android
           path: androidBuild/Android  
            
#       - name: Add gradle wrapper
#         uses: gradle/gradle-build-action@v2
#         with:
#            gradle-version: 7.6
#            arguments: wrapper 
#            build-root-directory: /androidBuild/Android
        
#       - name: Setup Gradle
#         uses: gradle/gradle-build-action@v2
#         with:
#            arguments: build
#            build-root-directory: /androidBuild
           
      - name: Log directory after buil
        run: |
            ls -la
            cd ./androidBuild/Android/
            ls -la
           
      - uses: actions/upload-artifact@v2
        with:
           name: build-Android
           path: build/Android/unityLibrary/libs/outputs/aar/unityLibrary-release.aar       

#       - uses: actions/upload-artifact@v2
#         with:
#           name: build-Android
#           path: build/Android
          
#   assembsleLibrary:
#        needs: buildAndroid
#        permissions:
#          contents: write
#        name: Build Unity Library 
#        runs-on: ubuntu-latest
#        steps:
#         - uses: actions/checkout@v3
#         - uses: actions/setup-java@v3
#           with:
#             distribution: temurin
#             java-version: 11
          
#         - name: Log directory
#           run: |
#             ls -la
#             cd ./build/Android  
#             ls -la
          
#         - name: Add gradle wrapper
#           uses: gradle/gradle-build-action@v2.4.2
#           with:
#            gradle-version: 6.5
#            arguments: wrapper
#            build-root-directory: /build/Android    
        
#         - name: Setup Gradle
#           uses: gradle/gradle-build-action@v2.4.2
#           with:
#            arguments: build
#            build-root-directory: build/Android
           
#         - uses: actions/upload-artifact@v2
#           with:
#            name: build-Android
#            path: build/Android/unityLibrary/libs/outputs/aar/unityLibrary-release.aar


  deployPages:
    needs: buildWebGL
    name: Deploy to Github Pages 🚀
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: build-WebGL
          path: build

      - name: Deploy 🚀
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          branch: gh-pages
          folder: build/WebGL
